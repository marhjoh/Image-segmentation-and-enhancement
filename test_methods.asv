% Read in the images
img_flower = imread("images/flower.jpg");
img_tiger = imread("images/tiger.jpg");

% Convert images to grayscale
img_flower_gray = rgb2gray(img_flower);
img_tiger_gray = rgb2gray(img_tiger);

% Perform k-means clustering
k = 2; % Set the number of clusters
img_flower_vector = img_flower_gray(:);
img_tiger_vector = img_tiger_gray(:);

[idx_tiger, centers] = kmeans(double(img_flower_vector), k);
[idx, centers] = kmeans(double(img_tiger_vector), k);

clustered_img_flower = reshape(idx, size(img_flower_gray));
clustered_img_tiger = reshape(idx, size(img_tiger_gray));


AND

% Define the number of clusters for K-means clustering
K = 2;

% Perform K-means clustering on the images
[flower_labels, flower_centers] = kmeans(double(img_flower_gray(:)), K);
[tiger_labels, tiger_centers] = kmeans(double(img_tiger_gray(:)), K);

% Reshape the labels into an image
flower_seg_kmeans = reshape(flower_labels, size(img_flower_gray));
tiger_seg_kmeans = reshape(tiger_labels, size(img_tiger_gray));



% Perform thresholding
threshold = 128; % Set the threshold value
binary_img = img > threshold;

% Perform k-means clustering
k = 2; % Set the number of clusters
img_vector = img(:);
[idx, centers] = kmeans(double(img_vector), k);
clustered_img = reshape(idx, size(img));

% Display the original image and the segmented images
figure;
subplot(2,2,1); imshow(img); title('Original Image');
subplot(2,2,2); imshow(binary_img); title('Thresholding');
subplot(2,2,3); imshow(clustered_img, []); title('K-means Clustering');
